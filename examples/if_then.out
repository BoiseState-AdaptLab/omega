>>> # test if-then-else generation
>>> 
>>> symbolic n,m;
>>> r0:={[i,j]:1<=i,j<=n && m>1 && m<n};
>>> r1:={[i,j]:1<=i,j<=n && m>1 && m>=n };
>>> r2:={[i,j]:1<=i,j<=n && m<=1};
>>> codegen 0 r0,r1,r2;
for(t1 = 1; t1 <= n; t1++) {
  for(t2 = 1; t2 <= n; t2++) {
    if (m >= 2) {
      if (n >= m+1) {
        s0(t1,t2);
      }
      else {
        s1(t1,t2);
      }
    }
    else {
      s2(t1,t2);
    }
  }
}

>>> 
>>> r0:={[i]:1<=i<=100 && n> 1};
>>> r1:={[i,j]:1<=i,j<=100 && n>1};
>>> r2:={[i,j]:1<=i,j<=100};
>>> codegen 0 r0,r1,r2;
for(t1 = 1; t1 <= 100; t1++) {
  if (n >= 2) {
    s0(t1);
  }
  for(t2 = 1; t2 <= 100; t2++) {
    s2(t1,t2);
    if (n >= 2) {
      s1(t1,t2);
    }
  }
}

>>> codegen 1 r0,r1,r2;
for(t1 = 1; t1 <= 100; t1++) {
  if (n >= 2) {
    s0(t1);
    for(t2 = 1; t2 <= 100; t2++) {
      s1(t1,t2);
      s2(t1,t2);
    }
  }
  else {
    for(t2 = 1; t2 <= 100; t2++) {
      s2(t1,t2);
    }
  }
}

>>> codegen 2 r0,r1,r2;
if (n >= 2) {
  for(t1 = 1; t1 <= 100; t1++) {
    s0(t1);
    for(t2 = 1; t2 <= 100; t2++) {
      s1(t1,t2);
      s2(t1,t2);
    }
  }
}
else {
  for(t1 = 1; t1 <= 100; t1++) {
    for(t2 = 1; t2 <= 100; t2++) {
      s2(t1,t2);
    }
  }
}

>>> 
>>> r0:={[i,j]:1<=i,j<=100 && exists (alpha: i=4alpha)};
>>> r1:={[i,j]:10<=i,j<=100 && exists (alpha: i=4alpha+2)};
>>> codegen 0 r0,r1;
for(t1 = 4; t1 <= 100; t1 += 2) {
  for(t2 = 1; t2 <= 100; t2++) {
    if (intMod(t1,4) == 0) {
      s0(t1,t2);
    }
    else {
      if (t1 >= 10 && t2 >= 10) {
        s1(t1,t2);
      }
    }
  }
}

>>> codegen 1 r0,r1;
for(t1 = 4; t1 <= 100; t1 += 2) {
  if (intMod(t1,4) == 0) {
    for(t2 = 1; t2 <= 100; t2++) {
      s0(t1,t2);
    }
  }
  else {
    if (t1 >= 10) {
      for(t2 = 10; t2 <= 100; t2++) {
        s1(t1,t2);
      }
    }
  }
}

>>> 
